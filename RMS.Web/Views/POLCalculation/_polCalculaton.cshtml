@using RMS.Utility
@using RMS.Web.Extensions
@model RMS.Web.Models.ViewModel.DamageMachineriesInfoViewModel
@{
    ViewBag.Title = "Index";
    Layout = null;
}
<div class="row">
    <div class="panel panel-info">
        <div class="panel-heading">
            <h5>পি ও এল এর হিসাব</h5>
        </div>
        <div class="body">
            <table>
                <tr class="col-md-12">

                    <td>
                    <td class="col-md-2"><button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Edit", "POLCalculation")'">Add New</button></td>
                    <td class="col-md-7"></td>
                    <td class="col-md-3">
                        @using (Html.BeginForm("SearchByKey", "POLCalculation", FormMethod.Get, new { @class = "submit-allow ignore-validation" }))
                        {

                            <table>
                                <tr>
                                   
                                    <td>
                                        @Html.TextBoxFor(x => x.SearchKey, new { @class = "textBoxsize form-control search", tabindex = 1, autofocus = "autofocus", placeholder = "Serach Value" })
                                    </td>
                                    <td>
                                        <input type="button" onclick="saveForm(this)" class="btn btn-primary pull-right" data-target="#person" value="Search" />
                                    </td>
                                </tr>
                            </table>
                        }
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<div class="row">
    @{
        var grid = new WebGrid(canPage: true, rowsPerPage: AppConfig.PageSize, canSort: true, ajaxUpdateContainerId: "grid");
        grid.Bind(Model.PolCalculation, rowCount: Model.DamageMachineriesInfos.Count, autoSortAndPage: true);
        grid.Pager(WebGridPagerModes.All);
        @grid.GetHtml(htmlAttributes: new { MachineriesDescriptionIdentity = "grid" },
            tableStyle: "webgrid-table webgrid",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            firstText: "First",
            lastText: "Last",
            nextText: "Next",
            mode: WebGridPagerModes.All,
            previousText: "Previous",
            columns: grid.Columns(
                        grid.Column("ক্রমিক নম্বর.", format: item => item.WebGrid.Rows.IndexOf(item) + 1 + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex),
                         grid.Column("ControlShipInfo.ControlName", header: "জাহাজের নাম"),
                //grid.Column("FuelOilName", header: "জ্বালানী তেলের নাম"),
                grid.Column("StockFuelOil", header: "জ্বালানী তেলের মজুদ (লিটার/কেজি)"),
                grid.Column("FuelConsumption", header: "জ্বালানী তেল খরচ"),
                grid.Column("UnitPrice", header: "প্রতি লিটার/কেজি মূল্য দরে(টাকা)"),
                grid.Column("Edit", format: @<text>@Html.ActionLink("Edit", "Edit", "POLCalculation", new { id = item.MachineriesDescriptionIdentity }, null)</text>),
                grid.Column("Delete", format: @<text> @Html.ActionLink("Delete", "Delete", "POLCalculation", new { id = item.MachineriesDescriptionIdentity }, null)</text>)@*,
                grid.Column( "Download", format: @<text> @Html.ActionLink("Download", "Download", "POLCalculation", new { id = item.ShipId }, null)</text>)*@
                                 ));
    }
</div>

