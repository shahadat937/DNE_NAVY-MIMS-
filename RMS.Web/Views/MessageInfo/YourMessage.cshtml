@using RMS.Utility
@using RMS.Web.Extensions
@model RMS.Web.Models.ViewModel.MessageInfoViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Row -->
<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div>
                    <h3 class="card-title">My Message Information</h3>
                </div>
                <div class="card-options">
                </div>
            </div>
            <div class="card-body" style="max-height:100% !important">
                <div class="table-responsive">
                    <table id="example" class="table table-striped table-bordered text-nowrap w-100">
                        <thead>
                            <tr>
                                <th class="wd-15p">Serial No</th>
                                <th class="wd-15p">Signal DTG</th>
                                <th class="wd-15p">Message To</th>
                                <th class="wd-20p">Message CC</th>
                                <th class="wd-20p">Message Type</th>
                                <th class="wd-20p">Reference</th>
                                <th class="wd-20p">Message Date</th>
                                <th class="wd-20p">Message</th>
                                <th class="wd-20p"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.MessageInfosV)
                            {
                                <tr>
                                    <td>@item.MessageInfoIdentity</td>
                                    <td>@item.MessageId</td>
                                    <td>@item.MsgToName</td>
                                    <td>@item.MsgCC</td>
                                    <td>@item.MsgTypeName</td>
                                    <td>@item.Remark</td>
                                    <td>@item.MsgToName</td>
                                    <td>@item.MessageDate</td>
                                    <td>
                                        @Html.ActionLink("Download", "Download", "MessageInfo", new { id = item.MessageInfoIdentity }, null)
                                     
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Row End-->



@*<div class="row">
    <div class="panel panel-info">
        <div class="panel-heading">
            <h5>My Message Information</h5>
        </div>
        <div class="body">
            <div class="row">

                <div class="col-md-12">
                    @using (Html.BeginForm("SearchByKeyTo", "MessageInfo", FormMethod.Get, new { @class = "submit-allow ignore-validation" }))
                    {
                        <div>
                            <div class="pull-right">
                                &nbsp; &nbsp; @Html.SearchButton()&nbsp;
                            </div>
                            <div class="pull-right">
                                @Html.TextBoxFor(x => x.SearchKey, new { @class = "textBoxsize form-control", tabindex = 1, autofocus = "autofocus", placeholder = "Serach Value" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="pull-left">
        <div class="btn-group ">
            <button type="button" class="btn btn-primary">Export To</button>
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>
            <ul class="dropdown-menu">
                <li>@Html.ActionLink("Excel", "ExportTo", new { ReportType = "Excel", searchKey = Model.SearchKey })</li>
                <li>@Html.ActionLink("PDF", "ExportTo", new { ReportType = "PDF", searchKey = Model.SearchKey })</li>
                <li>@Html.ActionLink("Word", "ExportTo", new { ReportType = "Word", searchKey = Model.SearchKey })</li>
            </ul>
        </div>
    </div>
</div>
<div class="row">
    @{
        var grid = new WebGrid(canPage: true, rowsPerPage: AppConfig.PageSize, canSort: true, ajaxUpdateContainerId: "grid");
        grid.Bind(Model.MessageInfosV, rowCount: Model.MessageInfosV.Count, autoSortAndPage: true);
        grid.Pager(WebGridPagerModes.All);
        @grid.GetHtml(htmlAttributes: new {messageInfoIdentity = "grid"},
            tableStyle: "webgrid-table webgrid",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            firstText: "First",
            lastText: "Last",
            nextText: "Next",
            mode: WebGridPagerModes.All,
            previousText: "Previous",
            columns: grid.Columns(
                grid.Column("MessageInfoIdentity", header: "Serial No"),
                grid.Column("MsgFromName", header: "Send Ship"),
                grid.Column("MsgToName", header: "Recieved Ship"),
                grid.Column("MessageId", header: "Signal DTG"),
                grid.Column("MsgCC", header: "Message CC"),
                grid.Column("Remark", header: "Reference"),
                grid.Column("MsgTypeName", header: "Message Type"),
                grid.Column("MessageDate", header: "Message Date", format: item => (item.MessageDate == null) ? "" : item.MessageDate.ToString("dd MMMM yyyy")),

                grid.Column("Message", header: "Message"),
                grid.Column("Download", format: @<text> @Html.ActionLink("Download", "Download", "MessageInfo", new { id = item.messageInfoIdentity }, null)</text>)
                     ))
        ;
    }
</div>*@

