@using RMS.Utility
@using RMS.Web.Extensions
@model RMS.Web.Models.ViewModel.UpdateOplStateViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="panel panel-info">
        <div class="panel-heading">
            <h5>Refit Schedule Notification</h5>
        </div>
        <div class="body">
            <div class="row">
                <div class="col-md-10">
                    @using (Html.BeginForm("SearchByKeyRefit", "Home", FormMethod.Get, new { @class = "submit-allow ignore-validation" }))
                    {
                        <div>
                            
                            <div class="pull-left">
                                @Html.TextBoxFor(x => x.SearchKey, new { @class = "textBoxsize form-control", tabindex = 1, autofocus = "autofocus", placeholder = "Serach Value" })
                            </div>
                            <div class="pull-left">
                                &nbsp; &nbsp;  @Html.SearchButton()&nbsp;
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    @{
    var grid = new WebGrid(canPage: true, rowsPerPage: AppConfig.PageSize, canSort: true, ajaxUpdateContainerId: "grid");
    grid.Bind(Model.vwRefitDokingNotifications, rowCount: Model.vwRefitDokingNotifications.Count, autoSortAndPage: true);
    grid.Pager(WebGridPagerModes.All);
    @grid.GetHtml(htmlAttributes: new { ControlShipInfoId = "grid" },
            tableStyle: "webgrid-table webgrid",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            firstText: "First",
            lastText: "Last",
            nextText: "Next",
            mode: WebGridPagerModes.All,
            previousText: "Previous",
            columns: grid.Columns(
                                                     grid.Column("ControlShipInfoId", header: "Ship Id"),
                                                      grid.Column("ShipName", header: "Ship Name"),
                                                                       grid.Column("PNextRefitFrom", header: "Next Refit Plan Date", format: item => item.PNextRefitFrom.ToString("dd MMM yyyy")),
                                             grid.Column("NextRefitFromMsg", header: "Message")
                                                                        ));
}
</div>







