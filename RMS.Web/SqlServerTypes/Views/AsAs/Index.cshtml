@using RMS.Utility
@using RMS.Web.Extensions
@model RMS.Web.Models.ViewModel.As_AsViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="panel panel-info">
        <div class="panel-heading">
            <h5>As & As Information</h5>
        </div>
        <div class="body">

            <table>
                <tr>
                    <td>@Html.ActionLink("Add New", "Edit", "AsAs", new { @class = "btn btn-primary" })</td>
                    <td>
                        @using (Html.BeginForm("Searchbykey", "AsAs", FormMethod.Get, new { @class = "submit-allow ignore-validation" }))
                        {

                            <table>
                                <tr>
                                    <td>
                                        @Html.Label("Search Key")
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(x => x.SearchKey, new { @class = "textBoxsize form-control", tabindex = 1, autofocus = "autofocus", placeholder = "Serach Value" })
                                    </td>
                                    <td>
                                        @Html.SearchButton()
                                    </td>
                                </tr>
                            </table>
                        }
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>



<div class="row">
    @{
        var grid = new WebGrid(canPage: true, rowsPerPage: AppConfig.PageSize, canSort: true, ajaxUpdateContainerId: "grid");
        grid.Bind(Model.AsAsInfos, rowCount: Model.AsAsInfos.Count, autoSortAndPage: true);
        grid.Pager(WebGridPagerModes.All);
        @grid.GetHtml(htmlAttributes: new { AsAndAsIdentity = "grid" },
                tableStyle: "webgrid-table webgrid",
                headerStyle: "webgrid-header",
                footerStyle: "webgrid-footer",
                alternatingRowStyle: "webgrid-alternating-row",
                selectedRowStyle: "webgrid-selected-row",
                rowStyle: "webgrid-row-style",
                firstText: "First",
                lastText: "Last",
                nextText: "Next",
                mode: WebGridPagerModes.All,
                previousText: "Previous",
                columns: grid.Columns(
                                grid.Column("AsAndAsIdentity", header: "Seril No"),
                                grid.Column("ShipInfo.ShipName", header: "Ship Name"),
                                grid.Column("AsAndAsDate", header: "AsAndAs Date", format: item => ((item.AsAndAsDate == null) ? "" : item.AsAndAsDate.ToString("dd MMM yyyy"))),

                                grid.Column("PrevAsAndAsDate", header: "Prev Date", format: item => ((item.PrevAsAndAsDate == null) ? "" : item.PrevAsAndAsDate.ToString("dd MMM yyyy"))),

                                grid.Column("AsAndAsClass", header: "Class"),
                                grid.Column("AsAndAsLocation", header: "Location"),
                                grid.Column("AsAndAsDescription", header: "Description"),
                                grid.Column("UpdateCalc", header: "Update Calc"),
                                grid.Column("Edit", format: @<text>@Html.ActionLink("Edit", "Edit", "AsAs", new { id = item.AsAndAsIdentity }, null)</text>),
                                grid.Column("Delete", format: @<text> @Html.ActionLink("Delete", "Delete", "AsAs", new { id = item.AsAndAsIdentity }, null)</text>)
        @*grid.Column(header: "Download", format: @<text> @Html.ActionLink("Download", "Download", "ShipMovement", new { id = item.ShipId }, null)</text>)*@
));
    }
</div>


