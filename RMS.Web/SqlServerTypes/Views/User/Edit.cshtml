@model RMS.Web.Models.ViewModel.UserViewModel
@{
    var title = (Model.UserId>0)?"Edit User" :"Create user";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/CommonDesign/commonBootStrap.css" rel="stylesheet" />

@using (Html.BeginForm("Save", "User", FormMethod.Post, new { @class = "UserForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="container">
        <div class="aaa">
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">
                    <h2>@title</h2>
                </legend>
                <br/>
                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="UserName" class="col-md-4 control-label">User ID:</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.UserName, new { @class = "textBoxsize form-control", tabindex = 1, autofocus = "autofocus", placeholder = "Bank Code + Login ID" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="UserFullName" class="col-md-4 control-label">Full Name:</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.UserFullName, new { @class = "textBoxsize form-control", tabindex = 8, placeholder = "Enter User Full Name" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="Password" class="col-md-4 control-label">Password:</label>
                            <div class="col-md-8">
                                <a href="#" data-toggle="tooltip" data-placement="top" title="Password must be at least 8 characters long & Combination of Alphanumeric">@Html.PasswordFor(x => x.Password, new { @class = "textBoxsize form-control", tabindex = 2, placeholder = "Enter Password" })</a>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="RoleId" class="col-md-4 control-label">Role Name:</label>
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.RoleId, Model.RoleSelectdItemList, "-Select-", new { @class = "dropdownsize form-control", tabindex = 9 })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="ConfirmPassword" class="col-md-4 control-label">Confirm Password:</label>
                            <div class="col-md-8">
                                <a href="#" data-toggle="tooltip" data-placement="top" title="This Password mush be same to the above Password">@Html.PasswordFor(x => x.ConfirmPassword, new { @class = "textBoxsize form-control", tabindex = 3, placeholder = "Enter ConfirmPassword" })</a>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="BankCode" class="col-md-4 control-label">Bank Name:</label>
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.BankCode, Model.BankSelectdItemList, "-Select-", new { @class = "BankName dropdownsize form-control", tabindex = 10, @TargetClass = "DistrictName", @action = "/User/GetDistrictByBankCode" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="PhoneNumber" class="col-md-4 control-label">Mobile number:</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "textBoxsize form-control", tabindex = 4, placeholder = "Enter Mobile Number" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="DistrictCode" class="col-md-4 control-label">District Name:</label>
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.DistrictCode, Model.DistricSelectdItemList, "-Select-", new { @class = "DistrictName dropdownsize form-control", tabindex = 11, @TargetClass = "BranchName", @action = "/User/GetBranchNameByDistrict" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="Email" class="col-md-4 control-label">Email:</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.Email, new { @class = "textBoxsize form-control", tabindex = 5, placeholder = "Enter Email" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="BranchInfo" class="col-md-4 control-label">Branch Name:</label>
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.BranchInfo, Model.BranchInfosSelectdItemList, "-Select-", new { @class = "BranchName dropdownsize form-control", tabindex = 12 })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="SecurityQustion" class="col-md-4 control-label">Security Qustion:</label>
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.SecurityQustion, Model.SecurityQustionSelectdItemList, "-Select-", new { @class = "dropdownsize form-control", tabindex = 6 })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="VerifyLimit" class="col-md-4 control-label">Verify Limit:</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.VerifyLimit, new { @class = "textBoxsize form-control", placeholder = "Enter  Verify Limit", tabindex = 13 })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="Answer" class="col-md-4 control-label">Answer:</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.Answer, new { @class = "textBoxsize form-control", placeholder = "Enter Answer", tabindex = 7 })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="TransLimit" class="col-md-4 control-label">Transaction Limit:</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.TransLimit, new { @class = "textBoxsize form-control", placeholder = "Enter Transaction Limit", tabindex = 15 })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="inputLabel3" class="col-md-4 control-label"></label>
                            <div class="col-md-8">

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            <label for="inputLabel4" class="col-md-4 control-label"></label>
                            <div class="col-md-8">
                                <input type="submit" id="btnSave" value="Save" onclick="myFunction(),showhide()" class="btn btn-primary" tabindex=16 />
                            </div>
                        </div>
                    </div>
                </div>

                <p>
                    @Html.ActionLink("Back to List", "Index", "User")
                </p>
                <div class="row">
                    <div class="col-sm-offset-4" id="newpost" style="color:red; padding-left:3px;">
                        <p>@TempData["message"]</p>
                    </div>
                </div>
                <br />
              
            </fieldset>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        

        function myFunction() {
            var uri = "http://localhost:6023/User/Edit";
            var res = encodeURI(uri);
            document.getElementById("demo").innerHTML = res;
        }

        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        function showhide() {
            var div = document.getElementById("newpost");
            if (div.style.display !== "none") {
                div.style.display = "none";
            }
        }

        function toUnicode(elmnt) {
            var next;
            if (elmnt.value.length == elmnt.maxLength) {
                next = elmnt.tabIndex + 1;
                //look for the fields with the next tabIndex
                var f = elmnt.form;
                for (var i = 0; i < f.elements.length; i++) {
                    if (next <= f.elements[i].tabIndex) {
                        f.elements[i].focus();
                        break;
                    }
                }
            }
        }
       
                

       
        $('.BankName').change(function () {
            var $BankNamedropdown = $(this);
            var targetClass = $BankNamedropdown.attr('TargetClass');
            var url = $BankNamedropdown.attr('action');

            var bankCode = $BankNamedropdown.val();
            var option = {
                url: url,
                type: 'GET',
                dataType: 'JSON',
                data: { bankCode: bankCode }
            };
            $.ajax(option).done(function (districts) {
                if (districts.length > 0) {
                    ClearDropDownList(targetClass);
                    $.each(districts, function () {
                        $("." + targetClass).append($("<option />").val(this.BranchCode).text(this.BranchName));
                    });
                } else {
                    NotFoundData(targetClass);
                }

            });
        });

        $('.DistrictName').change(function () {
            var $DistrictNamedropdown = $(this);
            var targetClass = $DistrictNamedropdown.attr('TargetClass');
            var url = $DistrictNamedropdown.attr('action');
            var districtCode = $DistrictNamedropdown.val();
            var option = {
                url: url,
                type: 'GET',
                dataType: 'JSON',
                data: { districtCode: districtCode }
            };
            $.ajax(option).done(function (brnchList) {
                if (brnchList.length > 0) {
                    ClearDropDownList(targetClass);
                    $.each(brnchList, function () {
                        $("." + targetClass).append($("<option />").val(this.BranchCode).text(this.BranchName));
                    });
                } else {
                    NotFoundData(targetClass);
                }

            });
        });
        function ClearDropDownList(selector) {
            $('.' + selector)
                .find('option').remove()
                .end().append($('<option>').text("-Select-").attr('value', ""));
        };

        function NotFoundData(targetClass) {
            $('.' + targetClass)
                .append($('<option>').text("Not Found").attr('value', ""));
        };
    </script>
}

